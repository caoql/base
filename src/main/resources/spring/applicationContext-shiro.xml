<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-lazy-init="true">
	<description>Shiro安全配置</description>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 安全管理器 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 默认的登陆访问url -->
		<property name="loginUrl" value="/login" />
		<!-- 登陆成功后跳转的url -->
		<property name="successUrl" value="/index" />
		<!-- 没有权限跳转的url -->
		<property name="unauthorizedUrl" value="/unauth" />
		<property name="filterChainDefinitions">
			<value>
				<!-- anon 不需要认证 authc 需要认证 user 验证通过或RememberMe登录的都可以 -->
				/css/** = anon
				/img/** = anon
				/js/** = anon
				/templet/** = anon
				/favicon.ico =anon
				/login.jsp = anon
				/login = anon
				/** = authc
			</value>
		</property>
		<!-- 过滤器 -->
		<property name="filters">
			<map>
				<entry key="authc" value-ref="authFilter" />
			</map>
		</property>
	</bean>
	<bean id="authFilter" class="com.cal.base.common.shiro.filter.ShiroAuthFilter" />

	<!--安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--设置自定义Realm -->
		<property name="realm" ref="shiroDbRealm" />
		<!--将缓存管理器，交给安全管理器 -->
		<!-- <property name="cacheManager" ref="shiroSpringCacheManager" /> -->
		<!-- 会话管理 -->
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!-- 項目自定义的Realm -->
	<bean id="shiroDbRealm" class="com.cal.base.common.shiro.ShiroDbRealm">
		<!-- <constructor-arg name="cacheManager" ref="shiroSpringCacheManager" /> -->
		<!-- 启用身份验证缓存，即缓存AuthenticationInfo信息，默认false -->
		<property name="authenticationCachingEnabled" value="true" />
		<!-- 缓存AuthenticationInfo信息的缓存名称 -->
		<property name="authenticationCacheName" value="authenticationCache" />
		<!-- 缓存AuthorizationInfo信息的缓存名称 -->
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>

	<!-- 用户授权信息Cache, 采用spring-cache, 具体请查看spring-ehcache.xml、spring-redis.xml -->
	<!-- <bean id="shiroSpringCacheManager" class="com.cal.base.common.shiro.cache.ShiroSpringCacheManager">
		<property name="cacheManager" ref="cacheManager" />
	</bean> -->

	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 设置全局会话超时时间 半小时 -->
		<property name="globalSessionTimeout" value="#{30 * 60 * 1000}" />
		<!-- url上带sessionId 默认为true -->
		<property name="sessionIdUrlRewritingEnabled" value="false" />
		<property name="sessionDAO" ref="sessionDAO" />
	</bean>
	
	<!-- 会话DAO 用于会话的CRUD -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<!-- Session缓存名字，默认就是shiro-activeSessionCache -->
		<property name="activeSessionsCacheName" value="activeSessionCache" />
		<!-- <property name="cacheManager" ref="shiroSpringCacheManager" /> -->
	</bean>
	
	<!-- <bean class="com.cal.base.common.shiro.captcha.DreamCaptcha">
		<property name="cacheManager" ref="shiroSpringCacheManager" />
		复用半小时缓存
		<property name="cacheName" value="halfHour" />
	</bean> -->


	<!-- 在方法中 注入 securityManager ，进行代理控制 -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- shiro密码加密配置 ，交给凭证匹配器 -->
	<bean id="passwordHash" class="com.cal.base.common.shiro.PasswordHash">
		<!-- 密码加密 1次md5,增强密码可修改此处 -->
		<property name="algorithmName" value="md5" />
		<property name="hashIterations" value="1" />
	</bean>
</beans>